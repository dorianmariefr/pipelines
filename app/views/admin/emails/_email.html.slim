- if email.persisted?
  .card
    .p
      span.font-bold=> link_to email.email, [:admin, email]
      - if email.verified?
        span.text-green-600=> t(".verified")
      - else
        span.text-red-600=> t(".not_verified")
      - if can?(:destroy, [:admin, email])
        = button_to t(".delete"), [:admin, email], method: :delete, class: "button--link text-red-600", form_class: "inline-block"

    - if email.not_verified?
      - if email.verification_code.present?
        .p= t(".verification_code_sent")

        = form_for email, url: [:admin, email] do |f|
          .p(data-controller="code")
            .flex.gap-2
              = f.text_field :verification_code, data: { code_target: "input" }, value: params[:verification_code]
              = f.submit t(".submit")
            .text-red-600(data-code-target="error")
            = fake_code

        .p= button_to t(".resend_verification_code"), [:admin, email, :send_verification]
      - else
        .p= button_to t(".send_verification_code"), [:admin, email, :send_verification]
- else
  div(data-controller="show")
    p(data-show-target="summary")
      = link_to t(".add_email"), "#", data: { action: "show#show" }
    .hidden(data-show-target="details")
      = form_for email, url: [:admin, email] do |f|
        = f.hidden_field :user_id
        .p(data-controller="email")
          .flex.gap-2.items-center
            = f.email_field :email, autocomplete: :email, required: true, data: { email_target: "input" }
            = f.label :verified, t(".verified?")
            = f.check_box :verified
            = f.submit t(".add")
          .text-red-600(data-email-target="error")
          = fake_email
